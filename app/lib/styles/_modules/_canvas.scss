/* Canvas purpose is to add semantics to your stylesheets */

/* Canvas
*/
@mixin canvas( $canvas-width: 100%, $canvas-height: 100%, $canvas-margin: 0 ) {
	width: $canvas-width;
	height: $canvas-height;
	margin: $canvas-margin;
}

*, *:after, *:before {
	@include box-sizing;
} /* When we set a width, that element stays that width, despite padding 
or borders being applied */

/* Boxes 
*/

@mixin canvas-box( $canvas-box-width: 100%, $canvas-box-height: 100%, $canvas-box-margin: 0 ) {
	width: $canvas-box-width;
	height: $canvas-box-height;
	margin: $canvas-box-margin;
} /* Use boxes as grid/layout structures for semantic css, layout 
structures can now be easily identified in your stylesheets */

@mixin gutters( $padding: 0 20px 0 ) {
	padding: $padding;
} /* Use gutters for semantics & consistent padding in your layout structures */

/* Clearing Context 
*/

@mixin clear-both( $clear-both: both ) { 
	clear: both; }

@mixin clear-left( $clear-left: left ) { 
	clear: left; }

@mixin clear-right( $clear-right: right ) { 
	clear: right; }

@mixin clear-none( $clear-none: none ) { 
	clear: none; } /* Clear with readability */


/* %%%%%%%%% Usage %%%%%%%%% 
 
 	header {
 		...
 		@include box( 600px, 300px, 0 auto );
 	}

 	aside {
 		...
 		@include clear-left();
 		@include box( 200px, 800px, 0)
 	}

 	.column__0 {
 	    ... 
 		@include box(); 
 		@include gutters(); }

	.column__1 {
	    ... 
		@include box(); 
		@include gutters(); }

	.column__2 {
	    ... 
		@include box(); 
		@include gutters(); }

 %%%%%%%%%%%%%%%%%%%%%%%%% */